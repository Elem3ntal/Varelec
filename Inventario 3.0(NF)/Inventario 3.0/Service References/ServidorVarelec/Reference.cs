//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventario_3._0.ServidorVarelec {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorVarelec.IServicio")]
    public interface IServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/IngresarFacturaIngreso", ReplyAction="http://tempuri.org/IServicio/IngresarFacturaIngresoResponse")]
        bool IngresarFacturaIngreso(System.Xml.Linq.XElement factura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/IngresarFacturaIngreso", ReplyAction="http://tempuri.org/IServicio/IngresarFacturaIngresoResponse")]
        System.Threading.Tasks.Task<bool> IngresarFacturaIngresoAsync(System.Xml.Linq.XElement factura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/facturasIngresoResumen", ReplyAction="http://tempuri.org/IServicio/facturasIngresoResumenResponse")]
        System.Xml.Linq.XElement facturasIngresoResumen(int año, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/facturasIngresoResumen", ReplyAction="http://tempuri.org/IServicio/facturasIngresoResumenResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> facturasIngresoResumenAsync(int año, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ingresoPMP", ReplyAction="http://tempuri.org/IServicio/ingresoPMPResponse")]
        bool ingresoPMP(string NP, int NoE, int EoS, int cantidad, int precioFTR, int precioEXP, string moneda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ingresoPMP", ReplyAction="http://tempuri.org/IServicio/ingresoPMPResponse")]
        System.Threading.Tasks.Task<bool> ingresoPMPAsync(string NP, int NoE, int EoS, int cantidad, int precioFTR, int precioEXP, string moneda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerPMP", ReplyAction="http://tempuri.org/IServicio/obtenerPMPResponse")]
        System.Xml.Linq.XElement obtenerPMP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerPMP", ReplyAction="http://tempuri.org/IServicio/obtenerPMPResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> obtenerPMPAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/online", ReplyAction="http://tempuri.org/IServicio/onlineResponse")]
        bool online();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/online", ReplyAction="http://tempuri.org/IServicio/onlineResponse")]
        System.Threading.Tasks.Task<bool> onlineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioAgregar", ReplyAction="http://tempuri.org/IServicio/inventarioAgregarResponse")]
        int inventarioAgregar(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioAgregar", ReplyAction="http://tempuri.org/IServicio/inventarioAgregarResponse")]
        System.Threading.Tasks.Task<int> inventarioAgregarAsync(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioModificar", ReplyAction="http://tempuri.org/IServicio/inventarioModificarResponse")]
        int inventarioModificar(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioModificar", ReplyAction="http://tempuri.org/IServicio/inventarioModificarResponse")]
        System.Threading.Tasks.Task<int> inventarioModificarAsync(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioEliminar", ReplyAction="http://tempuri.org/IServicio/inventarioEliminarResponse")]
        int inventarioEliminar(string fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioEliminar", ReplyAction="http://tempuri.org/IServicio/inventarioEliminarResponse")]
        System.Threading.Tasks.Task<int> inventarioEliminarAsync(string fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioNVersion", ReplyAction="http://tempuri.org/IServicio/inventarioNVersionResponse")]
        string inventarioNVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioNVersion", ReplyAction="http://tempuri.org/IServicio/inventarioNVersionResponse")]
        System.Threading.Tasks.Task<string> inventarioNVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioObtener", ReplyAction="http://tempuri.org/IServicio/inventarioObtenerResponse")]
        System.Xml.Linq.XElement inventarioObtener();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/inventarioObtener", ReplyAction="http://tempuri.org/IServicio/inventarioObtenerResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> inventarioObtenerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesAgregar", ReplyAction="http://tempuri.org/IServicio/clientesAgregarResponse")]
        int clientesAgregar(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesAgregar", ReplyAction="http://tempuri.org/IServicio/clientesAgregarResponse")]
        System.Threading.Tasks.Task<int> clientesAgregarAsync(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesModificar", ReplyAction="http://tempuri.org/IServicio/clientesModificarResponse")]
        int clientesModificar(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesModificar", ReplyAction="http://tempuri.org/IServicio/clientesModificarResponse")]
        System.Threading.Tasks.Task<int> clientesModificarAsync(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesEliminar", ReplyAction="http://tempuri.org/IServicio/clientesEliminarResponse")]
        int clientesEliminar(string fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesEliminar", ReplyAction="http://tempuri.org/IServicio/clientesEliminarResponse")]
        System.Threading.Tasks.Task<int> clientesEliminarAsync(string fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesNVersion", ReplyAction="http://tempuri.org/IServicio/clientesNVersionResponse")]
        string clientesNVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesNVersion", ReplyAction="http://tempuri.org/IServicio/clientesNVersionResponse")]
        System.Threading.Tasks.Task<string> clientesNVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesObtener", ReplyAction="http://tempuri.org/IServicio/clientesObtenerResponse")]
        System.Xml.Linq.XElement clientesObtener();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/clientesObtener", ReplyAction="http://tempuri.org/IServicio/clientesObtenerResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> clientesObtenerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosAgregar", ReplyAction="http://tempuri.org/IServicio/usuariosAgregarResponse")]
        int usuariosAgregar(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosAgregar", ReplyAction="http://tempuri.org/IServicio/usuariosAgregarResponse")]
        System.Threading.Tasks.Task<int> usuariosAgregarAsync(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosModificar", ReplyAction="http://tempuri.org/IServicio/usuariosModificarResponse")]
        int usuariosModificar(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosModificar", ReplyAction="http://tempuri.org/IServicio/usuariosModificarResponse")]
        System.Threading.Tasks.Task<int> usuariosModificarAsync(string[] fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosEliminar", ReplyAction="http://tempuri.org/IServicio/usuariosEliminarResponse")]
        int usuariosEliminar(string fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosEliminar", ReplyAction="http://tempuri.org/IServicio/usuariosEliminarResponse")]
        System.Threading.Tasks.Task<int> usuariosEliminarAsync(string fila);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosNVersion", ReplyAction="http://tempuri.org/IServicio/usuariosNVersionResponse")]
        string usuariosNVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosNVersion", ReplyAction="http://tempuri.org/IServicio/usuariosNVersionResponse")]
        System.Threading.Tasks.Task<string> usuariosNVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosObtener", ReplyAction="http://tempuri.org/IServicio/usuariosObtenerResponse")]
        System.Xml.Linq.XElement usuariosObtener();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/usuariosObtener", ReplyAction="http://tempuri.org/IServicio/usuariosObtenerResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> usuariosObtenerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/escribirMemo", ReplyAction="http://tempuri.org/IServicio/escribirMemoResponse")]
        bool escribirMemo(string usuario, string entrada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/escribirMemo", ReplyAction="http://tempuri.org/IServicio/escribirMemoResponse")]
        System.Threading.Tasks.Task<bool> escribirMemoAsync(string usuario, string entrada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerMemosGenrales", ReplyAction="http://tempuri.org/IServicio/obtenerMemosGenralesResponse")]
        System.Xml.Linq.XElement obtenerMemosGenrales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerMemosGenrales", ReplyAction="http://tempuri.org/IServicio/obtenerMemosGenralesResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> obtenerMemosGenralesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/guardarCotizacion", ReplyAction="http://tempuri.org/IServicio/guardarCotizacionResponse")]
        int guardarCotizacion(System.Xml.Linq.XElement cotizacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/guardarCotizacion", ReplyAction="http://tempuri.org/IServicio/guardarCotizacionResponse")]
        System.Threading.Tasks.Task<int> guardarCotizacionAsync(System.Xml.Linq.XElement cotizacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/listaCotizaciones", ReplyAction="http://tempuri.org/IServicio/listaCotizacionesResponse")]
        System.Xml.Linq.XElement listaCotizaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/listaCotizaciones", ReplyAction="http://tempuri.org/IServicio/listaCotizacionesResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> listaCotizacionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerFactura", ReplyAction="http://tempuri.org/IServicio/obtenerFacturaResponse")]
        System.Xml.Linq.XElement obtenerFactura(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerFactura", ReplyAction="http://tempuri.org/IServicio/obtenerFacturaResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> obtenerFacturaAsync(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/indicadoresEconomicos", ReplyAction="http://tempuri.org/IServicio/indicadoresEconomicosResponse")]
        System.Xml.Linq.XElement indicadoresEconomicos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/indicadoresEconomicos", ReplyAction="http://tempuri.org/IServicio/indicadoresEconomicosResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> indicadoresEconomicosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/setearIndicadoresEconomicos", ReplyAction="http://tempuri.org/IServicio/setearIndicadoresEconomicosResponse")]
        bool setearIndicadoresEconomicos(string dolar, string euro, string importe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/setearIndicadoresEconomicos", ReplyAction="http://tempuri.org/IServicio/setearIndicadoresEconomicosResponse")]
        System.Threading.Tasks.Task<bool> setearIndicadoresEconomicosAsync(string dolar, string euro, string importe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ingresarFacturaLiberada", ReplyAction="http://tempuri.org/IServicio/ingresarFacturaLiberadaResponse")]
        bool ingresarFacturaLiberada(System.Xml.Linq.XElement factura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ingresarFacturaLiberada", ReplyAction="http://tempuri.org/IServicio/ingresarFacturaLiberadaResponse")]
        System.Threading.Tasks.Task<bool> ingresarFacturaLiberadaAsync(System.Xml.Linq.XElement factura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ingresarFacturaPorCotizacion", ReplyAction="http://tempuri.org/IServicio/ingresarFacturaPorCotizacionResponse")]
        string ingresarFacturaPorCotizacion(int identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ingresarFacturaPorCotizacion", ReplyAction="http://tempuri.org/IServicio/ingresarFacturaPorCotizacionResponse")]
        System.Threading.Tasks.Task<string> ingresarFacturaPorCotizacionAsync(int identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/facturasResumen", ReplyAction="http://tempuri.org/IServicio/facturasResumenResponse")]
        System.Xml.Linq.XElement facturasResumen(int año, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/facturasResumen", ReplyAction="http://tempuri.org/IServicio/facturasResumenResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> facturasResumenAsync(int año, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/consultarActualizacion", ReplyAction="http://tempuri.org/IServicio/consultarActualizacionResponse")]
        string consultarActualizacion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/consultarActualizacion", ReplyAction="http://tempuri.org/IServicio/consultarActualizacionResponse")]
        System.Threading.Tasks.Task<string> consultarActualizacionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/subirActualizacionAServidor", ReplyAction="http://tempuri.org/IServicio/subirActualizacionAServidorResponse")]
        bool subirActualizacionAServidor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/subirActualizacionAServidor", ReplyAction="http://tempuri.org/IServicio/subirActualizacionAServidorResponse")]
        System.Threading.Tasks.Task<bool> subirActualizacionAServidorAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioChannel : Inventario_3._0.ServidorVarelec.IServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioClient : System.ServiceModel.ClientBase<Inventario_3._0.ServidorVarelec.IServicio>, Inventario_3._0.ServidorVarelec.IServicio {
        
        public ServicioClient() {
        }
        
        public ServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IngresarFacturaIngreso(System.Xml.Linq.XElement factura) {
            return base.Channel.IngresarFacturaIngreso(factura);
        }
        
        public System.Threading.Tasks.Task<bool> IngresarFacturaIngresoAsync(System.Xml.Linq.XElement factura) {
            return base.Channel.IngresarFacturaIngresoAsync(factura);
        }
        
        public System.Xml.Linq.XElement facturasIngresoResumen(int año, int mes) {
            return base.Channel.facturasIngresoResumen(año, mes);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> facturasIngresoResumenAsync(int año, int mes) {
            return base.Channel.facturasIngresoResumenAsync(año, mes);
        }
        
        public bool ingresoPMP(string NP, int NoE, int EoS, int cantidad, int precioFTR, int precioEXP, string moneda) {
            return base.Channel.ingresoPMP(NP, NoE, EoS, cantidad, precioFTR, precioEXP, moneda);
        }
        
        public System.Threading.Tasks.Task<bool> ingresoPMPAsync(string NP, int NoE, int EoS, int cantidad, int precioFTR, int precioEXP, string moneda) {
            return base.Channel.ingresoPMPAsync(NP, NoE, EoS, cantidad, precioFTR, precioEXP, moneda);
        }
        
        public System.Xml.Linq.XElement obtenerPMP() {
            return base.Channel.obtenerPMP();
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> obtenerPMPAsync() {
            return base.Channel.obtenerPMPAsync();
        }
        
        public bool online() {
            return base.Channel.online();
        }
        
        public System.Threading.Tasks.Task<bool> onlineAsync() {
            return base.Channel.onlineAsync();
        }
        
        public int inventarioAgregar(string[] fila) {
            return base.Channel.inventarioAgregar(fila);
        }
        
        public System.Threading.Tasks.Task<int> inventarioAgregarAsync(string[] fila) {
            return base.Channel.inventarioAgregarAsync(fila);
        }
        
        public int inventarioModificar(string[] fila) {
            return base.Channel.inventarioModificar(fila);
        }
        
        public System.Threading.Tasks.Task<int> inventarioModificarAsync(string[] fila) {
            return base.Channel.inventarioModificarAsync(fila);
        }
        
        public int inventarioEliminar(string fila) {
            return base.Channel.inventarioEliminar(fila);
        }
        
        public System.Threading.Tasks.Task<int> inventarioEliminarAsync(string fila) {
            return base.Channel.inventarioEliminarAsync(fila);
        }
        
        public string inventarioNVersion() {
            return base.Channel.inventarioNVersion();
        }
        
        public System.Threading.Tasks.Task<string> inventarioNVersionAsync() {
            return base.Channel.inventarioNVersionAsync();
        }
        
        public System.Xml.Linq.XElement inventarioObtener() {
            return base.Channel.inventarioObtener();
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> inventarioObtenerAsync() {
            return base.Channel.inventarioObtenerAsync();
        }
        
        public int clientesAgregar(string[] fila) {
            return base.Channel.clientesAgregar(fila);
        }
        
        public System.Threading.Tasks.Task<int> clientesAgregarAsync(string[] fila) {
            return base.Channel.clientesAgregarAsync(fila);
        }
        
        public int clientesModificar(string[] fila) {
            return base.Channel.clientesModificar(fila);
        }
        
        public System.Threading.Tasks.Task<int> clientesModificarAsync(string[] fila) {
            return base.Channel.clientesModificarAsync(fila);
        }
        
        public int clientesEliminar(string fila) {
            return base.Channel.clientesEliminar(fila);
        }
        
        public System.Threading.Tasks.Task<int> clientesEliminarAsync(string fila) {
            return base.Channel.clientesEliminarAsync(fila);
        }
        
        public string clientesNVersion() {
            return base.Channel.clientesNVersion();
        }
        
        public System.Threading.Tasks.Task<string> clientesNVersionAsync() {
            return base.Channel.clientesNVersionAsync();
        }
        
        public System.Xml.Linq.XElement clientesObtener() {
            return base.Channel.clientesObtener();
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> clientesObtenerAsync() {
            return base.Channel.clientesObtenerAsync();
        }
        
        public int usuariosAgregar(string[] fila) {
            return base.Channel.usuariosAgregar(fila);
        }
        
        public System.Threading.Tasks.Task<int> usuariosAgregarAsync(string[] fila) {
            return base.Channel.usuariosAgregarAsync(fila);
        }
        
        public int usuariosModificar(string[] fila) {
            return base.Channel.usuariosModificar(fila);
        }
        
        public System.Threading.Tasks.Task<int> usuariosModificarAsync(string[] fila) {
            return base.Channel.usuariosModificarAsync(fila);
        }
        
        public int usuariosEliminar(string fila) {
            return base.Channel.usuariosEliminar(fila);
        }
        
        public System.Threading.Tasks.Task<int> usuariosEliminarAsync(string fila) {
            return base.Channel.usuariosEliminarAsync(fila);
        }
        
        public string usuariosNVersion() {
            return base.Channel.usuariosNVersion();
        }
        
        public System.Threading.Tasks.Task<string> usuariosNVersionAsync() {
            return base.Channel.usuariosNVersionAsync();
        }
        
        public System.Xml.Linq.XElement usuariosObtener() {
            return base.Channel.usuariosObtener();
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> usuariosObtenerAsync() {
            return base.Channel.usuariosObtenerAsync();
        }
        
        public bool escribirMemo(string usuario, string entrada) {
            return base.Channel.escribirMemo(usuario, entrada);
        }
        
        public System.Threading.Tasks.Task<bool> escribirMemoAsync(string usuario, string entrada) {
            return base.Channel.escribirMemoAsync(usuario, entrada);
        }
        
        public System.Xml.Linq.XElement obtenerMemosGenrales() {
            return base.Channel.obtenerMemosGenrales();
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> obtenerMemosGenralesAsync() {
            return base.Channel.obtenerMemosGenralesAsync();
        }
        
        public int guardarCotizacion(System.Xml.Linq.XElement cotizacion) {
            return base.Channel.guardarCotizacion(cotizacion);
        }
        
        public System.Threading.Tasks.Task<int> guardarCotizacionAsync(System.Xml.Linq.XElement cotizacion) {
            return base.Channel.guardarCotizacionAsync(cotizacion);
        }
        
        public System.Xml.Linq.XElement listaCotizaciones() {
            return base.Channel.listaCotizaciones();
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> listaCotizacionesAsync() {
            return base.Channel.listaCotizacionesAsync();
        }
        
        public System.Xml.Linq.XElement obtenerFactura(int numero) {
            return base.Channel.obtenerFactura(numero);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> obtenerFacturaAsync(int numero) {
            return base.Channel.obtenerFacturaAsync(numero);
        }
        
        public System.Xml.Linq.XElement indicadoresEconomicos() {
            return base.Channel.indicadoresEconomicos();
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> indicadoresEconomicosAsync() {
            return base.Channel.indicadoresEconomicosAsync();
        }
        
        public bool setearIndicadoresEconomicos(string dolar, string euro, string importe) {
            return base.Channel.setearIndicadoresEconomicos(dolar, euro, importe);
        }
        
        public System.Threading.Tasks.Task<bool> setearIndicadoresEconomicosAsync(string dolar, string euro, string importe) {
            return base.Channel.setearIndicadoresEconomicosAsync(dolar, euro, importe);
        }
        
        public bool ingresarFacturaLiberada(System.Xml.Linq.XElement factura) {
            return base.Channel.ingresarFacturaLiberada(factura);
        }
        
        public System.Threading.Tasks.Task<bool> ingresarFacturaLiberadaAsync(System.Xml.Linq.XElement factura) {
            return base.Channel.ingresarFacturaLiberadaAsync(factura);
        }
        
        public string ingresarFacturaPorCotizacion(int identificacion) {
            return base.Channel.ingresarFacturaPorCotizacion(identificacion);
        }
        
        public System.Threading.Tasks.Task<string> ingresarFacturaPorCotizacionAsync(int identificacion) {
            return base.Channel.ingresarFacturaPorCotizacionAsync(identificacion);
        }
        
        public System.Xml.Linq.XElement facturasResumen(int año, int mes) {
            return base.Channel.facturasResumen(año, mes);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> facturasResumenAsync(int año, int mes) {
            return base.Channel.facturasResumenAsync(año, mes);
        }
        
        public string consultarActualizacion() {
            return base.Channel.consultarActualizacion();
        }
        
        public System.Threading.Tasks.Task<string> consultarActualizacionAsync() {
            return base.Channel.consultarActualizacionAsync();
        }
        
        public bool subirActualizacionAServidor() {
            return base.Channel.subirActualizacionAServidor();
        }
        
        public System.Threading.Tasks.Task<bool> subirActualizacionAServidorAsync() {
            return base.Channel.subirActualizacionAServidorAsync();
        }
    }
}
